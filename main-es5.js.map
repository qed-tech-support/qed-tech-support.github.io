{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/aside/aside.component.ts","webpack:///src/app/aside/aside.component.html","webpack:///src/app/movie-details/movie-details.component.ts","webpack:///src/app/movie-details/movie-details.component.html","webpack:///src/app/movie-favorite/movie-favorite.component.ts","webpack:///src/app/movie-favorite/movie-favorite.component.html","webpack:///src/app/movie-search/movie-search.component.ts","webpack:///src/app/movie-search/movie-search.component.html","webpack:///src/app/services/movie.service.client.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","movieService","AppComponent","home","counter","imgNotFound","movie","movieID","originalTitle","title","moviePoster","backdrop_path","findMoviesByID","findRecommendations","releaseDate","release_date","voteAverage","vote_average","overview","fetch","response","json","movieGenres","genres","resp","recommendationsMovies","results","showMoreMovies","res","movies","liked","showAllGenres","allGenres","findMovies","showNext","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","AsideComponent","topMovies","MovieDetailsComponent","close","MovieFavoriteComponent","favoriteMoviesList","filter","i","console","log","MovieSearchComponent","movieTitleSearch","movieTitle","trim","findMoviesByTitle","searchForMovie","MovieServiceClient","urlPoster","favoriteMovies","details","favorite","isUnliked","isLiked","aside","moviesLocalStorage","localStorage","getItem","JSON","parse","getMovie","pushMovie","index","indexOf","push","splice","setItem","stringify","length","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { MovieServiceClient } from './services/movie.service.client';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent implements OnInit {\n\n  home = true;\n  counter = 1;\n  allMoviesID;\n  movieList;\n\n\n\n  // <!---------------- Обработка изображений -------------->\n  // linkImg = this.urlPoster + this.movieImg;\n  imgNotFound = 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTDRAlAhlLLqfwKG851D8pat8qeVhLGfMCNP76Y1ziQnhba3eLB&usqp=CAU';\n\n  constructor(public movieService: MovieServiceClient) { }\n\n\n  findMovieDetails(movie) {\n    this.movieService.movie = movie;\n    this.movieService.movieID = movie.id;\n    this.movieService.originalTitle = movie.title;\n    this.movieService.moviePoster = movie.backdrop_path;\n    this.findMoviesByID(this.movieService.movieID);\n    this.findRecommendations(this.movieService.movieID)\n    this.movieService.releaseDate = movie.release_date;\n    this.movieService.voteAverage = movie.vote_average;\n    this.movieService.overview = movie.overview;\n  }\n\n  // <!---------------- Найти фильм по ID -------------->\n  findMoviesByID(movieID) {\n    return fetch('https://api.themoviedb.org/3/movie/' + movieID + '?api_key=08c7be451907cb09e42a1d808fe6f5d0&language=en-US')\n      .then(response => response.json())\n      .then(response => this.movieService.movieGenres = response.genres)\n  }\n\n\n  // <!---------------- найти рекоммендации фильма -------------->\n  findRecommendations(movieID) {\n    return fetch('https://api.themoviedb.org/3/movie/' + movieID + '/recommendations?api_key=08c7be451907cb09e42a1d808fe6f5d0&language=en-US&page=1')\n      .then(response => response.json())\n      .then(resp => this.movieService.recommendationsMovies = resp.results)\n  }\n\n\n\n\n  // <!---------------- Следущая страница поиска -------------->\n  showNext() {\n    this.counter++\n    this.movieService\n      .showMoreMovies(this.counter)\n      .then(res => this.movieService.movies = res.results)\n  }\n  // <!---------------- Предыдущая страница поиска -------------->\n  showPrev() {\n    this.counter--\n    this.movieService\n      .showMoreMovies(this.counter)\n      .then(res => this.movieService.movies = res.results)\n  }\n\n\n  ngOnInit(): void {\n    this.movieService\n      .liked(1)\n    this.movieService\n      .showAllGenres()\n      .then(res => this.movieService.allGenres = res.genres)\n    this.movieService\n      .findMovies()\n      .then(res => this.movieService.movies = res.results)\n  }\n\n}","<!---------------- Main -------------->\n<div class=\"app-main\">\n\n    <!---------------- Movie Search -------------->\n    <app-movie-search></app-movie-search>\n\n    <!---------------- Aside -------------->\n    <app-aside></app-aside>\n\n\n    <div class=\"container {{movieService.aside}}\">\n\n        <h2 class=\"app__title\">Top movies</h2>\n\n        <ul class=\"movie__items\">\n\n            <!---------------- Item -------------->\n            <li class=\"movie__item \" *ngFor=\"let movie of movieService.movies\">\n                <!---------------- Img Wrapper -------------->\n                <div class=\"items__img__wrapper\">\n                    <!---------------- Img -------------->\n                    <img (click)=\"movieService.details = true\" (click)=\"findMovieDetails(movie)\"\n                        class=\"movie__items__img\"\n                        src=\"{{(movieService.urlPoster + movie.poster_path).includes(null) ? imgNotFound :movieService.urlPoster + movie.poster_path}}\"\n                        alt=\"\">\n                </div>\n                <!---------------- Face -------------->\n                <div class=\"movie__items__wrapper\">\n                    <h2 class=\"movie__items__title\">{{movie.title || movie.name }}</h2>\n                    <!---------------- Genres -------------->\n                    <span *ngFor=\"let id of movieService.allGenres ; let i = index;\">\n                        <span  class=\"movie__items__genre\"\n                        *ngIf=\"movie.genre_ids.includes(id.id)\" \n                        >\n                        {{id.name}}\n                        </span>\n                    </span>\n\n                </div>\n\n              \n    <!---------------- Like Button -------------->\n                <button class=\" \n                    button\n                    {{movieService.favoriteMovies.includes(movie.id) ? 'like' : ''}}  button--liked\"\n                     style=\"margin-top: auto\" \n                     (click)=\"movieService.liked(movie.id)\"\n                     >\n                    {{movieService.favoriteMovies.includes(movie.id) ? movieService.isLiked  : movieService.isUnliked}}\n                </button>\n            </li>\n        </ul>\n\n           <!---------------- Pagination -------------->\n        <div class=\"movie__button__group\">\n            <button class=\"button button--primary\" \n            *ngIf=\"counter > 1\"\n            (click)=\"showPrev()\">Prev Page</button>\n            <button class=\"button button--primary\" (click)=\"showNext()\">Next Page</button>\n        </div>\n    </div>\n</div>\n\n\n<!---------------- Details -------------->\n<app-movie-details *ngIf=\"movieService.details\" (close)=\"movieService.details = false\"></app-movie-details>\n\n\n<!---------------- Favorite -------------->\n<app-movie-favorite *ngIf=\"movieService.favorite\" (close)=\"movieService.favorite = false\"></app-movie-favorite>","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MovieSearchComponent } from './movie-search/movie-search.component';\nimport { MovieServiceClient } from './services/movie.service.client';\nimport { MovieDetailsComponent } from './movie-details/movie-details.component';\nimport { AsideComponent } from './aside/aside.component';\nimport { MovieFavoriteComponent } from './movie-favorite/movie-favorite.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MovieSearchComponent,\n    MovieDetailsComponent,\n    AsideComponent,\n    MovieFavoriteComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [MovieServiceClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MovieServiceClient } from '../services/movie.service.client';\n\n@Component({\n  selector: 'app-aside',\n  templateUrl: './aside.component.html',\n  styleUrls: ['./aside.component.scss']\n})\nexport class AsideComponent implements OnInit {\n\n\n  constructor(public movieService: MovieServiceClient) { }\n\n\n  topMovies() {\n    this.movieService\n      .findMovies()\n      .then(res => this.movieService.movies = res.results)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<aside class=\"aside  {{movieService.aside}}\">\n    <nav>\n        <ul>\n            <li class=\"aside__item\" (click)='topMovies()'> ⭐️ Top movies</li>\n            <li class=\"aside__item\" (click)=\"movieService.favorite = true\" (click)=\"movieService.showFavoriteMovies()\">\n                💙Liked movies\n                <span class=\"liked__movies__counter\">\n                </span>\n            </li>\n        </ul>\n    </nav>\n\n</aside>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MovieServiceClient } from '../services/movie.service.client';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.scss']\n})\nexport class MovieDetailsComponent implements OnInit {\n\n\n  @Output() close = new EventEmitter<void>()\n\n\n  constructor(public movieService: MovieServiceClient) { }\n\n\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"movie__description\">\n\n\n\n    <div class=\"movie__description__wrapper\">\n\n        <div class=\"description__img__wrapper\">\n            <img src=\"{{movieService.urlPoster + movieService.moviePoster}}\" class=\"movie__description__img\" alt=\"\">\n\n            <div class=\"btn__group\">\n                <button class=\"button button--primary\" (click)=\"close.emit()\"> Back to search</button>\n\n<!--                 \n                <button class=\"button--liked\" (click)=\"movieService.liked(movieService.movieID)\"> Like this movie\n                    💙</button> -->\n\n\n                    \n                <button class=\" \n                button\n                {{movieService.favoriteMovies.includes(movieService.movie.id) ? 'like' : ''}}  button--liked\"\n                 style=\"margin-top: auto\" \n                 (click)=\"movieService.liked(movieService.movie.id)\"\n                 >\n                {{movieService.favoriteMovies.includes(movieService.movie.id) ? movieService.isLiked  : movieService.isUnliked}}\n            </button>\n            </div>\n\n\n        </div>\n\n\n        <div class=\"movie__description__content\">\n\n            <div class=\"description__content__wrapper\">\n\n                <h3 class=\"description__title\">{{movieService.originalTitle}}</h3>\n\n                <hr>\n\n                <div class=\"description__details\">\n\n                    <ul class=\"description__details__genres\">\n                        <li class=\"description__details__genre\">Genre :</li>\n                        <li class=\"description__details__genre\" *ngFor=\"let genre of movieService.movieGenres\">\n                            {{genre.name}}\n                        </li>\n                    </ul>\n\n                    <span class=\"description__details__date\">Release Date: <span>{{movieService.releaseDate}}</span>\n                    </span>\n                    <span class=\"description__details__date\">Vote average: <span>{{movieService.voteAverage}}</span>\n                    </span>\n\n\n                </div>\n\n                <p class=\"description__overview\">{{movieService.overview}}</p>\n\n\n\n\n            </div>\n        </div>\n\n\n\n        <div class=\"recommend__movie\">\n            <h3 class=\"recommend__movie__title\">Recommendations Movies</h3>\n            <ul class=\"recommend__movie__items\">\n                <li class=\"recommend__movie__item\"\n                    *ngFor=\"let recomend of movieService.recommendationsMovies| slice:0:6;\">\n                    <img class=\"recommend__movie__img\" src=\"{{movieService.urlPoster + recomend.backdrop_path}}\" alt=\"\">\n\n                    <span class=\"movie__item__title\">{{recomend.title}}</span>\n                </li>\n            </ul>\n        </div>\n\n\n    </div>\n</div>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MovieServiceClient } from '../services/movie.service.client';\n\n@Component({\n  selector: 'app-movie-favorite',\n  templateUrl: './movie-favorite.component.html',\n  styleUrls: ['./movie-favorite.component.scss']\n})\nexport class MovieFavoriteComponent implements OnInit {\n\n  @Output() close = new EventEmitter<void>()\n\n\n  constructor(public movieService: MovieServiceClient) { }\n\n  remove(id) {\n    this.movieService.favoriteMoviesList = this.movieService.favoriteMoviesList.filter(i => i.id !== id);\n    console.log(this.movieService.favoriteMoviesList)\n  }\n\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"movie__favorite\">\n\n    <h2 class=\"movie__favorite__title\">My top list {{movieService.favoriteMoviesList.length }}</h2>\n\n\n    <ol class=\"movie__favorite__items\">\n        <li class=\"movie__favorite__item\" *ngFor=\"let movie of movieService.favoriteMoviesList | slice:0:10;\">\n\n            <span *ngIf=\"movie.id > 0\">\n                <img class=\"movie__favorite__img\" src=\"{{movieService.urlPoster + movie.poster_path}}\" alt=\"\">\n                <span class=\"movie__fovorite__title\">{{movie.title}}</span>\n                <span (click)=\"movieService.liked(movie.id)\" (click)=\"remove(movie.id)\"\n                    class=\"favorite__item__close\"></span>\n            </span>\n\n        </li>\n    </ol>\n\n    <button class=\"button button--favorite\" (click)=\"movieService.favoriteMoviesList = []\" (click)=\"close.emit()\">\n        Back to search\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MovieServiceClient } from '../services/movie.service.client';\n\n@Component({\n  selector: 'app-movie-search',\n  templateUrl: './movie-search.component.html',\n  styleUrls: ['./movie-search.component.scss']\n})\nexport class MovieSearchComponent implements OnInit {\n\n\n  movieTitleSearch = '';\n  movieTitle;\n  // aside = this.movieService.aside;\n\n  constructor(public movieService: MovieServiceClient) { }\n\n  searchForMovie(movieTitle) {\n\n    if (this.movieTitleSearch.trim()) {\n      this.movieTitleSearch = ''\n      this.movieService\n        .findMoviesByTitle(movieTitle)\n        .then(res => this.movieService.movies = res.results)\n        .then(res => console.log(this.movieService.movies))\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header\">\r\n\r\n    <span class=\"burger\" (click)=\"movieService.aside = !movieService.aside\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n    </span>\r\n\r\n    <div class=\"input__group\">\r\n        <input class=\"movie__search\" [(ngModel)]=\"movieTitleSearch\" placeholder=\"Search movies...\" />\r\n        <button class=\"movie__search__button\" (click)=\"searchForMovie(movieTitleSearch)\">search</button>\r\n    </div>\r\n</div>","export class MovieServiceClient {\r\n    movies = [];\r\n    movie;\r\n    movieID;\r\n    moviePoster;\r\n    movieGenres;\r\n    allGenres;\r\n    urlPoster = \"https://image.tmdb.org/t/p/w500\";\r\n    originalTitle;\r\n    releaseDate;\r\n    voteAverage;\r\n    overview;\r\n    recommendationsMovies = [];\r\n    favoriteMovies = [];\r\n    favoriteMoviesList = [];\r\n    details = false;\r\n    favorite = false;\r\n    isUnliked = 'Like this movie💙';\r\n    isLiked = 'Liked💥';\r\n    aside = true;\r\n\r\n\r\n    findMovies() {\r\n        return fetch('https://api.themoviedb.org/3/movie/popular?api_key=08c7be451907cb09e42a1d808fe6f5d0&language=en-US&page=1')\r\n            .then(response => response.json())\r\n    }\r\n\r\n    findMoviesByTitle(title) {\r\n        return fetch('https://api.themoviedb.org/3/search/multi?api_key=08c7be451907cb09e42a1d808fe6f5d0&language=en-US&query= ' + title)\r\n            .then(response => response.json())\r\n    }\r\n\r\n\r\n    showMoreMovies(counter) {\r\n        return fetch('https://api.themoviedb.org/3/movie/popular?api_key=08c7be451907cb09e42a1d808fe6f5d0&language=en-US&page= ' + counter + ' ')\r\n            .then(response => response.json())\r\n    }\r\n\r\n    showAllGenres() {\r\n        return fetch('https://api.themoviedb.org/3/genre/movie/list?api_key=08c7be451907cb09e42a1d808fe6f5d0&language=en-US')\r\n            .then(response => response.json())\r\n    }\r\n\r\n    getMovie() {\r\n        const moviesLocalStorage = localStorage.getItem('myFavoriteMovies');\r\n        if (moviesLocalStorage !== null) {\r\n            return JSON.parse(moviesLocalStorage);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    liked(movieID?) {\r\n\r\n       \r\n\r\n        let movies = this.getMovie();\r\n        let pushMovie = false;\r\n        const index = movies.indexOf(movieID);\r\n        if (index === -1) {\r\n            movies.push(movieID);\r\n            pushMovie = true;\r\n        } else {\r\n            movies.splice(index, 1);\r\n        }\r\n        localStorage.setItem('myFavoriteMovies', JSON.stringify(movies));\r\n        this.favoriteMovies = movies;\r\n        return { pushMovie, movies }\r\n\r\n    }\r\n\r\n    findMoviesByID(movieID) {\r\n        return fetch('https://api.themoviedb.org/3/movie/' + movieID + '?api_key=08c7be451907cb09e42a1d808fe6f5d0&language=en-US')\r\n            .then(response => response.json())\r\n    }\r\n\r\n\r\n    showFavoriteMovies() {\r\n        for (let i = 0; i < this.favoriteMovies.length; i += 1) {\r\n            this.findMoviesByID(this.favoriteMovies[i])\r\n                .then(res => this.favoriteMoviesList.push(res))\r\n                .then(res => console.log(this.favoriteMoviesList))\r\n        }\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}